name: ecs_service_deploy
on:
  workflow_dispatch:
     inputs:
        env:
          description: 'Environment to deploy:'
          required: true
          default: 'dev'
          type: choice
          options:
          - dev
          - stage
          - prod
        action:
          description: 'Terraform action to perform:'
          required: true
          default: plan
          type: choice
          options:
          - plan
          - apply
          - destroy
        db:
          description: 'Which db:'
          required: true
          type: choice
          options:
          - sql
          - mysql
          - oracle

jobs:
  terraform_action:
    name: Execute terraform ${{ inputs.action }} on ${{ inputs.db }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set account number
        run: |
          case ${{ inputs.env }} in
            dev)
              echo "ACCESS_KEY_ID=${{ secrets.DATALAKE_DEV_NONPROD_ACCESS_KEY }}" >> $GITHUB_ENV
              echo "SECRET_ACCESS_KEY=${{ secrets.DATALAKE_DEV_NONPROD_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
              echo "ACCOUNT_NUMBER=609258630391" >> $GITHUB_ENV
            ;;
            stage)
              echo "ACCESS_KEY_ID=${{ secrets.DATALAKE_STAGE_NONPROD_ACCESS_KEY }}" >> $GITHUB_ENV
              echo "SECRET_ACCESS_KEY=${{ secrets.DATALAKE_STAGE_NONPROD_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
              echo "ACCOUNT_NUMBER=609258630391" >> $GITHUB_ENV
            ;;
          esac
        shell: bash
             
      - name: Set directory
        id: set-directory
        run: echo "directory=./ecs-service" >> "$GITHUB_OUTPUT"

      - name: Run Terraform ${{ inputs.action }} for ${{ inputs.env }} environment
        uses: ./terraform-action
        with:
          env: ${{ github.event.inputs.env }}
          action: ${{ github.event.inputs.action }}
          working-directory: ${{ steps.set-directory.outputs.directory }}
          aws-access-key-id: ${{ env.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.SECRET_ACCESS_KEY }}
          aws-assume-role: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/Github-ActionTest"
          state-bucket: "terraform-state-${{ github.event.inputs.env }}-${{ env.ACCOUNT_NUMBER }}"
          backend-var-file: "tfvars/backend-${{ inputs.env }}-${{ inputs.db }}.tfvars"
          tfvar-override: "tfvars/${{ inputs.env }}-${{ inputs.db }}.tfvars"
